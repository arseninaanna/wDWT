# -*- coding: utf-8 -*-
"""DTW

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uMwCbWJ_3ZEi14jBGQ8qt9Bb8ytfUp6f
"""

import numpy as np
import nltk
nltk.download('punkt')

def embedding(text, size=15):
  words = nltk.word_tokenize(text)
  random_embedding = {word: np.random.rand(size) for word in words}
  return list(random_embedding[word] for word in words)

text1 = "Hello, my name is Arseny. I'm from Moscow. This program is a wDTW implementation"
text2 = 'This area is also where nutrients are most abundant. The bathypelagic and abyssopelagic zones are aphotic, meaning that no light penetrates this area of the ocean. These zones make up about 75% of the inhabitable ocean space'
embedded1 = embedding(text1)
embedded2 = embedding(text2)

def DistPara(p, q):
  # calculates DTW_para
  e = len(p)
  f = len(q)
  DTW = np.empty(shape=(e + 1, f + 1))
  DTW[0] = np.array([float('inf') for i in range(DTW.shape[1])])
  DTW[:, 0] = np.array([float('inf') for i in range(DTW.shape[0])])
  DTW[0][0] = 0
  Dist = np.zeros(shape=())
  for i in range(1, e + 1):
    for j in range(1, f + 1):
      distance = np.linalg.norm(p[i-1] - q[j-1])
      DTW[i][j] = distance + min(DTW[i-1][j], DTW[i][j-1], DTW[i-1][j-1])
  return DTW[e][f]


def wDTW_docs(d1, d2):
  # calculates DTW_doc
  m = len(d1)
  n = len(d2)
  wDTW = np.empty(shape=(e + 1, f + 1))
  wDTW[0] = np.array([float('inf') for i in range(wDTW.shape[1])])
  wDTW[:, 0] = np.array([float('inf') for i in range(wDTW.shape[0])])
  wDTW[0][0] = 0
  Dist = np.zeros(shape=())
  for i in range(1, m + 1):
    for j in range(1, n + 1):
      distance = DistPara(d1[i-1], d2[j-1])
      wDTW[i][j] = distance + min(wDTW[i-1][j], wDTW[i][j-1], wDTW[i-1][j-1])
  return DTW[m][n]

print(DistPara(embedded1, embedded2))